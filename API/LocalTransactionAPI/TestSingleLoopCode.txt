# @app.route("/TestSingleLoop", methods=["GET"])
# def TestSingleLoop():
#     """
#     To begin the loop search beginning with the current API.
#     ---
#     parameters:
#         start_node: 
#             type: string
#             description: start node to begin loop search from
#     responses:
#         200:
#         description: Returns intersection between this API's KG and the other API's KG
#         schema:
#             api: User
#             intersection:
#                 type: list
#                 description: list of intersecting nodes
#     """
#     ApiID = flask.request.args["api"]
#     StartNode = flask.request.args["start_node"]
#     URL = API_ADDRESSBOOK.get(ApiID)
#     PrintDebug("Start Node: " + StartNode)

#     LoopID = GenerateRequestID()
#     PrintInfo("Loop search started...")
#     PrintInfo("Loop ID: " + LoopID)
#     LoopLog[LoopID] = StartNode

#     PSIRequestID = GenerateRequestID()
#     OutwardNodes = GetOutwardNodes([StartNode])
#     ServerDirectory[PSIRequestID] = OutwardNodes

#     PrintInfo("PSI initiating with " + api + " API...")
#     PrintInfo("Request ID: " + PSIRequestID)    
#     response = requests.get(URL + "/PSI", params={"initiator_id" : DATABASE_ID, "end_id" : DATABASE_ID, "psi_request_id" : PSIRequestID, "loop_id" : LoopID, "path": "LT"})
#     response_msg = response.json()
#     PrintInfo("Response: " + response.json()["msg"])

#     if response.json()["msg"] == "Found":
#         return {"msg" : "Found"}

#     DisposeLoopID(LoopID)
#     return response_msg